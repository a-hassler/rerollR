% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roll_rtest.R
\name{roll_rtest}
\alias{roll_rtest}
\title{Performs randomization tests on data frames generated by re_ functions.}
\usage{
roll_rtest(
  p1,
  p2,
  nr,
  metric = "mean",
  do.plot = T,
  density = T,
  histogram = T,
  fill.color = c("dodgerblue4", "dodgerblue2", "deepskyblue2", "red")
)
}
\arguments{
\item{p1, p2}{(input: data frames from re_ functions) p1 and p2 inputs must be
two data frames generated from re_ functions representing the two
populations that the user wants to compare. p1 and p2 need to have the same
number of columns and it is recommended to generate them using the same re_
function (either re_boot or re_gauss) and same settings (notably n and
boot.n).}

\item{nr}{(input: a positive integer) Specifies the number of randomizations
(i.e random assignments) to be made for each pairs of column of p1 and p2
data frame. Warning: regarding the typical size of re_ functions output
(>1000 columns data frame), a nr >= 10 000, common for randomization tests,
takes a considerable amount of computation time because the total number of
randomization operations = nr x ncol(p1) (or nr x ncol(p2)). A nr<100 is
advised for preliminary testing.}

\item{metric}{(input: "mean", "median", "t") Specifies the metric that will be
monitored for each randomization. With "mean" monitors the absolute
difference between the means of the populations. "median" monitors the
absolute difference between the medians of the populations. "t" monitors the
difference between the t statistic of the populations.}

\item{do.plot}{(input: TRUE or FALSE) Specifies if a plot of the result has to
be generated (TRUE) or not (FALSE). The package ggplot2 is needed if do.plot
= TRUE.}

\item{density}{(input: TRUE or FALSE) Specifies if the plot is a density plot
(TRUE) or not (FALSE). Note: density and histogram can be combined in one
plot.}

\item{histogram}{(input: TRUE or FALSE) Specifies if the plot is a histogram
plot (TRUE) or not (FALSE).Note: density and histogram can be combined in
one plot.}

\item{fill.color}{(input: a vector of length 4 containing only characters
referring to R colors) Specifies the colors used to fill the 0 to 0.001,
0.001 to 0.01, 0.01 to 0.05, 0.05 to +Inf sections (in this order) of the
density plot (density = T) or histogram plot (histogram = T, density = F).}
}
\value{
A list of objects containing:

1)"pvalues", a one column data frame compiling all the p-values resulting
from the tests. (nrow = ncol(p1) = ncol(p2))

2)"stats", a 1 x 3 data frame containing the percentages of tests resulting
in a p-value lower than 0.001, 0.01 and 0.05

3)"plot", an optional ggplot2 graph showing the distribution of p-values as
a plot of density, histogram or both.
}
\description{
Performs randomization tests by successively pairing and comparing columns
from two "re_ made" data frames (compare columns with the same rank in their
respective data frames) with the results obtained after having randomly
assigned individuals/objects to the populations. Save the estimated p-values
in a data frame and produce a table and plot showing the distribution of these
p-values. (output: a list of objects containing: 1)"pvalues", a one column
data frame compiling all the p-values resulting from the tests; 2)"stats", a 1
x 3 data frame containing the percentages of tests resulting in a p-value
lower than 0.001, 0.01 and 0.05; 3)"plot", an optional ggplot2 graph showing
the distribution of p-values as a plot of density, histogram or both)
}
\examples{
#In the following examples, nr is maintained very small to allow quick
#preliminary tests. Such a low nr number produces coarse but fast results and
#plots.
#Performing proper randomization tests commonly require nr >= 10 000 but implies
#very lengthy computation time when multiplied by roll_rtest.
#(n randomization = nr x ncol(re_Pop1) = nr x ncol(re_Pop2))

# With p1 and p2, two data frames generated by a re_ function (either re_gauss
# or re_boot) and same parameters. Attached re_Pop1 and re_Pop2 data frames
# have been generated by re_gauss with n=1000, a purposely small n, too small
# for proper analyses but allowing for quicker processing time for the purpose
# of this demonstration.

#Only produces result data frames (no plot)
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="mean", do.plot=FALSE)

#Produces an hybrid density + histogram plot (+ result data frames)
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="mean")

#Produces a density plot (+ result data frames)
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="mean", histogram = FALSE)

#Produces a histogram plot (+ result data frames)
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="mean", density=FALSE, histogram = TRUE)

#Alternative metrics
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="median", density=FALSE, histogram = TRUE)
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="t", density=FALSE, histogram = TRUE)

#Customized plot colors for density
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="mean", density=TRUE,
histogram =TRUE, fill.color=c("green","deepskyblue","blue","yellow"))
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="mean", density=TRUE,
histogram =FALSE, fill.color=c("green","deepskyblue","blue","yellow"))
#and histogram
roll_rtest(p1=re_Pop1, p2=re_Pop2, nr=10, metric="mean", density=FALSE,
histogram =TRUE, fill.color=c("green","deepskyblue","blue","yellow"))
}
