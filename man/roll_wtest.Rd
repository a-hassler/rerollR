% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/roll_wtest.R
\name{roll_wtest}
\alias{roll_wtest}
\title{Performs Wilcoxon-Mann-Whitney tests (Wilcoxon rank sum tests) on data frames
generated by re_ functions.}
\usage{
roll_wtest(
  p1,
  p2,
  do.plot = T,
  density = T,
  histogram = T,
  fill.color = c("dodgerblue4", "dodgerblue2", "deepskyblue2", "red"),
  ...
)
}
\arguments{
\item{p1, p2}{(input: data frames from re_ functions) p1 and p2 inputs must be
two data frames generated from re_ functions representing the two
populations that the user wants to compare. p1 and p2 need to have the same
number of columns and it is recommended to generate them using the same re_
function (either re_boot or re_gauss) and same settings (notably n and
boot.n). (Note: p1 and p2 respectively feed x and y in the test function.
The order is important e.g. for alternative = "greater".)}

\item{do.plot}{(input: TRUE or FALSE) Specifies if a plot of the result has to
be generated (TRUE) or not (FALSE). The package ggplot2 is needed if do.plot
= TRUE.}

\item{density}{(input: TRUE or FALSE) Specifies if the plot is a density plot
(TRUE) or not (FALSE). Note: density and histogram can be combined in one
plot.}

\item{histogram}{(input: TRUE or FALSE) Specifies if the plot is a histogram
plot (TRUE) or not (FALSE).Note: density and histogram can be combined in
one plot.}

\item{fill.color}{(input: a vector of length 4 containing only characters
referring to R colors) Specifies the colors used to fill the 0 to 0.001,
0.001 to 0.01, 0.01 to 0.05, 0.05 to +Inf sections (in this order) of the
density plot (density = T) or histogram plot (histogram = T, density = F).}

\item{...}{Allow to pass specific instructions to the test function (e.g.
alternative = "greater", paired = T, etc.).}
}
\value{
A list of objects containing:

1)"pvalues", a one column data frame compiling all the p-values resulting
from the tests. (nrow = ncol(p1) = ncol(p2))

2)"stats", a 1 x 3 data frame containing the percentages of tests resulting
in a p-value lower than 0.001, 0.01 and 0.05

3)"plot", an optional ggplot2 graph showing the distribution of p-values as
a plot of density, histogram or both.
}
\description{
Performs Wilcoxon-Mann-Whitney tests (from package stats) by successively
pairing and comparing columns from two "re_ made" data frames (compare columns
with the same rank in their respective data frames). Save the p-values in a
data frame and produce a table and plot showing the distribution of these
p-values. (output: a list of objects containing: 1)"pvalues", a one column
data frame compiling all the p-values resulting from the tests; 2)"stats", a 1
x 3 data frame containing the percentages of tests resulting in a p-value
lower than 0.001, 0.01 and 0.05; 3)"plot", an optional ggplot2 graph showing
the distribution of p-values as a plot of density, histogram or both)
}
\examples{
# With p1 and p2, two data frames generated by a re_ function (either re_gauss
# or re_boot) and same parameters. Attached re_Pop1 and re_Pop2 data frames
# have been generated by re_gauss with n=1000, a purposely small n, too small
# for proper analyses but allowing for quicker processing time for the purpose
# of this demonstration.

#Only produces result data frames (no plot)
roll_wtest(p1=re_Pop1, p2=re_Pop2, do.plot=FALSE)

#Produces an hybrid density + histogram plot (+ result data frames)
roll_wtest(p1=re_Pop1, p2=re_Pop2)

#Produces a density plot (+ result data frames)
roll_wtest(p1=re_Pop1, p2=re_Pop2, histogram = FALSE)

#Produces a histogram plot (+ result data frames)
roll_wtest(p1=re_Pop1, p2=re_Pop2, density=FALSE, histogram = TRUE)

#Pass specific instructions to wilcox.test function (package stats)
roll_wtest(p1=re_Pop1, p2=re_Pop2, density=FALSE, histogram = TRUE, alternative = "greater")
roll_wtest(p1=re_Pop1, p2=re_Pop2, density=FALSE, histogram = TRUE, paired = TRUE)

#Customized plot colors for density
roll_wtest(p1=re_Pop1, p2=re_Pop2, density=TRUE, histogram =TRUE,
fill.color=c("green","deepskyblue","blue","yellow"))
roll_wtest(p1=re_Pop1, p2=re_Pop2, density=TRUE, histogram =FALSE,
fill.color=c("green","deepskyblue","blue","yellow"))
#and histogram
roll_wtest(p1=re_Pop1, p2=re_Pop2, density=FALSE, histogram =TRUE,
fill.color=c("green","deepskyblue","blue","yellow"))
}
