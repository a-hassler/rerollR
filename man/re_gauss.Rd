% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/re_gauss.R
\name{re_gauss}
\alias{re_gauss}
\title{Use Gaussian random number generation to generate a data frame}
\usage{
re_gauss(
  data = NULL,
  popm,
  ID = NULL,
  popu = NULL,
  n,
  partitioned = F,
  u = NULL,
  u.conv = F,
  nm = NULL,
  na.popu = NULL,
  min.u = NULL
)
}
\arguments{
\item{data}{(input: NULL or a data frame) The input must be a data frame
containing the population metric measurements (identified by the popm
argument) and: if partitioned = F (default), a metric of the distribution of
the object/individual replicated measurements (e.g. SD, SE or U values at
the object/individual level, identified by the popu argument); or if
partitioned = T, an identifier (a vector or column header) allowing to
identify the objects/individuals composing the population (identified by the
ID argument). If partitioned = F, u.conv = T and u = "SE" or "2SE", the
input of the nm argument can also be a column header of data argument. Data
argument input must be NULL (default) if popm, ID or popu inputs are not
column headers (e.g. if ID = df$column_name).}

\item{popm}{(input: a column header from the data argument or a vector) The
vector or column must contain the mean values of measurements for each
object/individual of the population (if partitioned = F), or all replicated
measurements of the objects/individuals of the population (if partitioned =
T). The column or vector length must match the one of popu (if partitioned =
F) or ID (if partitioned = T). popm, popu and/or ID must always have the
same length and be ordered in the exact same way.}

\item{ID}{(input: NULL, a column header from the data argument or a vector)
Only required if partitioned = T. The vector or column must contain
PERFECTLY MATCHING identifiers (e.g. character strings, ID numbers)
regarding popm input, to allow the function to identify objects/individuals
within the population. The column or vector length must match the one of
popm and be ordered in the exact same way.}

\item{popu}{(input: NULL, a column header from the data argument or a vector)
Only required if partitioned = F. The vector or column must contain values
from a metric of distribution or uncertainty of popm object/individual
measurement values (e.g. SD, SE or U uncertainty values).}

\item{n}{(input: a positive integer) Specifies the number of alternative
populations generated by the function and stored in the data frame in
output. A n >= 10 000 is generally advised for reliable subsequent roll_
testings, while n=100 or 1000 can be useful for quick preliminary testing.}

\item{partitioned}{(input: TRUE or FALSE) In partitioned = F mode (default),
the intra-object/individual mean and dispersion or uncertainty values (e.g.
SD, SE, U uncertainty values) are taken directly from popm and popu inputs,
respectively. In such configuration, providing an input for ID is not
necessary. Within the embed rnorm function (package stats), popu data are
either used as such in rnorm (u.conv = F) or are converted to SD values
before being processed (u.conv = T). In partitioned = T mode, the mean and
standard deviation (SD) of each pool of object/individual popm values are
calculated within re_gauss by grouping data with matching ID identifiers (NA
values in popm are omitted; other NA values are generated when there is no
replicate for a given object/individual measurement, see na.popu argument
for how to deal with these NA values). These calculated mean and SD values
are inputs for the rnorm function (package stats) embed in the re_gauss
function.}

\item{u}{(input: NULL, "SD", "2SD", "SE", "2SE", "u", "U(k=2)", "U(k=3)")
Specifies the nature of dispersion or uncertainty values contained in popu
when partitioned = F (can be left as NULL when partitioned = T). "SD" (for
standard deviation) is the standard mode, as the rnorm function (package
stats) embed in re_gauss is designed to receive SD values as input. "2SD",
"SE" and "2SE" are converted to SD values within re_gauss if u.conv = T and
that appropriate input for the nm argument is provided (if u = "SE" or
"2SE"). re_gauss cannot convert "u", "U(k=2)" or "U(k=3)" to SD values (even
with u.conv = T). For custom uses, all of these possible inputs can directly
serve as input for the embed rnorm function in replacement of SD values
(with u.conv = F), but the user should acknowledge rnorm will still treat it
as SD values which affect the meaning of the output.}

\item{u.conv}{(input: TRUE or FALSE) Argument only active when partitioned =
F. Indicate if popu data should be converted in SD values from another form
of dispersion or uncertainty metric (u.conv = T) or not (u.conv = F). For
conversion from SE or 2SE values, specific input in the nm argument are
required.}

\item{nm}{(input: NULL, a positive integer, a column header from the data
argument or a vector) Input (other than NULL) only necessary when
partitioned = F, u.conv = T and u = "SE" or "2SE". Specifies the number of
replicates for each object/individual of the population. Necessary for
converting popu into SD values from SE or 2SE values. Can be provided as a
vector matching popm and popu in length and order, as a column header from
data (if data = a data frame), or as a positive integer. This last option
set the same nm (equal to the integer) for every object/individual of the
population.}

\item{na.popu}{(input: NULL, a positive numeric value, "na.omit", "mean",
"med", "min" or "max") Specifies the method to deal with NA values in
dispersion/uncertainty data (within popu input or generated with
partitioned=T), commonly generated when object/individual measurements have
not been replicated (number of measurement = 1). If na.popu input is a
positive numeric value, NA values are replaced by this numeric value.
"na.omit" remove objects/individuals with NA values. If set to "mean",
"med", "min" or "max", replace NA values by the calculated mean, median,
minimum or maximum value (NA excluded) of the population, respectively.
Values created by na.popu in replacement of NA values are processed like any
other dispersion/uncertainty value regarding conversion to SD values (u.conv
= T) and replacement through min.u related operations. Thus, consistency
between the nature of popu and na.popu inputs is important.}

\item{min.u}{(input: NULL or a positive numeric value) Inactive if NULL
(default). When set to a numeric value, all values in popu below the
specified value of min.u are replaced by the value of min.u (e.g. for when
popu is thought to be underestimated). This also applies for popu values
generated by na.popu and SD values generated through partitioned = T. Values
modified by min.u are processed like any other dispersion/uncertainty value
regarding conversion to SD values (u.conv = T). Thus, consistency between
the nature of popu and min.u inputs is important and must match u argument
input (e.g. "SD", "2SD", etc.). When partitioned = T, min.u must be a
standard deviation (SD) value.}
}
\value{
Return a data frame containing all created alternative populations.
For this data frame nrow is equal to the number of unique individual/object
with popm values (affected by na.popu), and ncol = n. Can serve as a input for
roll_ functions.
}
\description{
Takes a population of objects/individuals known through replicated
measurements of a given metric. Based on the values and distribution of the
measurements of each object/individual of this population (uncertainties
either provided in input or computed by the function), the function generates
new data for each object/individual of the population using a Gaussian random
number generation. These generations are centered on the mean of each
object/individual and conditioned by the dispersion of the replicated
measurements around their means (using the function rnorm from the package
stats). Each round of data generation represents an alternative population
(same number of objects/individuals with different values than the original
population) which are successively added as columns (one per iteration) in a
data frame.
}
\examples{
# Data frames mentioned in the example (Pop1, Pop1_agr) are contained in
# rerollR attached data.

#Example of processing using re_gauss

#For not aggregated data frame
re_gauss(data=Pop1, popm="Body_length", ID ="ID", n=100, partitioned = TRUE)
#equivalent to
re_gauss(popm=Pop1$Body_length, ID =Pop1$ID, n=100, partitioned = TRUE)

#For aggregated data frame
re_gauss(data = Pop1_agr, popm="mean", popu = "sd", u = "SD", n=100)
#equivalent to
re_gauss(popm=Pop1_agr$mean, popu =Pop1_agr$sd, u = "SD", n=100)
}
